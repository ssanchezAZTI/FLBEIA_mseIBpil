facet_grid(area~quarter+date) +
theme_minimal()+
labs(y = "Density", x = "Length Class" )
ggplot(df) +
geom_density(aes(x = class, colour = type))+
facet_grid(area~quarter) +
theme_minimal()+
labs(y = "Density", x = "Length Class" )
ggplot(p.ty[p.ty$fleet=="Total",], aes(x = port2, y = value/1000,fill=area)) +
geom_bar(stat = "identity") +
facet_grid(date~.,scales="free_y") +
scale_y_continuous(labels=function(n){format(n, scientific = FALSE)})+
theme_minimal()+
theme(
text = element_text(size = 14),
plot.background =	element_rect(colour = NA, fill = NA),
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.y = element_blank(),
legend.title = element_blank()
)+
labs(y = "Landings (tons)", x = "Fishing port" )
df.missing
ggplot(bioport17[!is.na(bioport17$age),],aes(y=as.factor(age),x=class))+geom_count(aes(size=stat(prop),group=class)) + facet_grid(area~quarter) + scale_size_area(max_size=5) + geom_vline(aes(xintercept = z), vline.data,color="grey60",linetype="dashed")
install.packages("msess")
knitr::opts_chunk$set(echo = TRUE)
#load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
library(scales)
library(reshape2)
library(tables)
##Auxiliary functions
## add month
mes.fun=function(dados){
month=as.numeric(substr(dados$date,6,7))
dados=cbind(dados,month)
return(dados)
}
##add quarter
trim.fun=function(dados){
dados[dados$month<4,"quarter"]=1
dados[dados$month>9,"quarter"]=4
dados[dados$month>3 & dados$month<7,"quarter"]=2
dados[dados$month>6 & dados$month<10,"quarter"]=3
return(dados)
}
##order area (north to south)
order.area.fun=function(dados){
ordenado=factor(dados$area, levels=c("N","C","S"),ordered=T)
return(ordenado)
}
##order ports (north to south)
order.porto.fun=function(dados){
ordenado=factor(dados$port,levels=c("VIC","POV","MAT","AVE" ,"FIG", "NAZ","PEN",
"CAS","CDC","SET","SES" ,"SIN","LAG" ,"SAG",
"POR","QUA","OLH","TAV","VSA"), ordered=T)
return(ordenado)
}
#set month as Date
date.fun=function(dados,year){
xx <- paste(year,"-",sep="")
dados$date=paste(xx,dados$month,sep="")
dados$date=paste(dados$date,"-01",sep="")
dados$date=as.Date(dados$date,"%Y-%m-%d")
dados$date=as.Date(cut(dados$date,breaks = "month"))
return(dados)
}
#Landings
#Landing data comes from DGRM and is located in a database
#This file was passed by Xana Silva. Data comes from PNAB database
piland17 <- read.csv("~/Documents/IPMA/SARDINE/WGHANSA2018/Data/setAssessmentData/piland17.csv",header=T,sep=";",dec=",")
colnames(piland17) <- c("year", "month","area" ,"port","portcod", "gearall" ,"species","landkg")
load("~/Documents/IPMA/SARDINE/WGHANSA2018/data/setAssessmentData/wgbie_2018_2017_bio_pil_ 201805301307 .RData") ##amostragem biológica
load("~/Documents/IPMA/SARDINE/WGHANSA2018/data/setAssessmentData/wgbie_2018_2017_data_pil_ 201806081744 .RData") ##landings e comprimentos
ls()
piland17 <- trim.fun(piland17)
piland17$port <- order.porto.fun(piland17)
piland17$area <- order.area.fun(piland17)
#Some portcodes have no names (between two main ports)
sort(unique(piland17[is.na(piland17$port),5]))
#Give name to the previous main port (previous means more to the north since codes are
#attributed from north to south)
piland17 %>%
arrange(portcod) %>%
mutate(port2 = port) %>%
fill(port2) %>%
as.data.frame -> piland17
# cross-check
piland17 %>%
select(portcod, port, port2) %>%
unique() %>%
as.data.frame -> ports
#landings per fleet
landperFleet <- reshape2::dcast(piland17, area+quarter+month+port2~gearall,
value.var="landkg",fun.aggregate=sum,fill=as.numeric(NA))
landperFleet$total <- rowSums(landperFleet[,5:7],na.rm=T)
p.ty <- reshape2::melt(landperFleet,id.vars=1:4,measure.vars=5:8)
p.ty$fleet <- factor(p.ty$variable,levels = c("PSEINERS","POLYVALENT", "DTRAWL","total"),
labels=c("Seiners","Polyvalent","Trawl","Total"))
p.ty <- date.fun(p.ty,2017)
bioport17 <- P0_pil_data[,c(1,4,6,8,10:11,13:16,18,26:33,41:45,58,63,67,69,71:72,91:93)]
colnames(bioport17)=c("id_trip","id_box","id_ind","area","date","quarter","name_vessel",
"vessel_license","sport","id_sport","category","tot_weight_box",
"sample_weight_box","ntotal_box","nsamples_box","total_weight_spp",
"ntotal_spp","sample_weight_spp","nsample_size","nobs","sex","maturity",
"length","weight","obs","gutweight","gweight","fat","stomach_colour",
"stomach_content","nrings","age","edge")
bioport17$date <- as.Date(bioport17$date,"%Y-%m-%d")
bioport17$month <- as.Date(cut(bioport17$date,breaks = "month"))
bioport17$quarter <- as.numeric(bioport17$quarter)
bioport17$area <- as.factor(bioport17$area)
bioport17$area <- plyr::revalue(bioport17$area, c("NW"="N", "SW"="C","S"="S"))
bioport17$area <- order.area.fun(bioport17)
bioport17$port2 <- ports$port2[match(bioport17$id_sport, ports$portcod)]
bioport17$maturity<-as.factor(bioport17$maturity)
bioport17 <- droplevels(bioport17)
#insert variable with number actually sampled
bioport17 <- plyr::ddply(bioport17,"id_box",mutate,number=max(nobs))
#insert variable for class
bioport17[(bioport17$length-as.integer(bioport17$length))<0.5,"class"]<-as.integer(bioport17[(bioport17$length-as.integer(bioport17$length))<0.5,"length"])
bioport17[(bioport17$length-as.integer(bioport17$length))>=0.5,"class"]<-as.integer(bioport17[(bioport17$length-as.integer(bioport17$length))>=0.5,"length"])+0.5
bioport17%>%
group_by(quarter,area,port2,class)%>%
mutate(nclass = length(length))%>% as.data.frame -> bioport17
colnames(output_mes) <- c("area","month","gear","class","number","fc_sop","number_sop","weight")
output_mes$area <- as.factor(output_mes$area)
output_mes$area <- plyr::revalue(output_mes$area, c("NW"="N", "SW"="C","Sul"="S"))
output_mes$area <- order.area.fun(output_mes)
#add total sampled weight (individual weight * number)
output_mes$totweight <- output_mes$weight*output_mes$number
#add total sop.weight by length class (individual weight * number.sop)
output_mes$weight_sop <- output_mes$weight*output_mes$number_sop
output_mes <- date.fun(output_mes,2017)
xx <- output_mes[,c(11,2,1,4,7)]
xx$type <- rep("landings",nrow(xx))
names(xx) <- c("date","month","area","class","nclass", "type" )
xx <- trim.fun(xx)
xx$nclass <- xx$nclass/100
bioport17%>%
group_by(month,quarter,area,class)%>%
summarise(nclass = length(length))%>% as.data.frame -> tt
tt$type <- rep("sampling",nrow(tt))
names(tt) <- c("date", "quarter", "area","class","nclass", "type")
df <- rbind(xx[,c(1,7,3:6)],tt)
df$nclass <- round(df$nclass,2)
df %>% spread(type,nclass) %>% as.data.frame -> df.spread
df.missing <- df.spread[df.spread$landings != 0 & is.na(df.spread$sampling),]
table.missing <- tabular(factor(area)*factor(quarter)*factor(date)*factor(class)~(landings+sampling),data=df.missing)
## Distribuição de comprimentos por área e quarter nos desembarques para fazer df seguinte
with(xx, table(class,area,quarter))
14600*0.665
12028*0.665
9709-7998.62
337448/175449
1-(175449/337448)
175449/337448
175449*100/337448
337448/2
library(r4ss)
library(reshape2)
library(ggplot2)
library(tables)
library(tidyr)
library(dplyr)
dir2018 <- c("~/Documents/IPMA/SARDINE/WGHANSA2018/SS3/2018_Assess/")
retro_years<-2018
F.all<-Fbar.all<-rec.all<-bio.all<-sel.all<-c()
#read ouputs and create database for ggplots
for(i in retro_years){
mydir<-get(paste0("dir",i))
setwd(mydir)
out.ss3<-SS_output(mydir,forecast=FALSE,ncols=45)
#selectivity<-subset(out.ss3$ageselex[out.ss3$ageselex$Fleet==1 & out.ss3$ageselex$Factor=="Asel" & out.ss3$ageselex$Yr %in% c(out.ss3$startyr:(out.ss3$endyr-1)),c("Yr","0","1","2","3","4","5","6") ])
#changed this because in our stock we use Agesel2
selectivity<-subset(out.ss3$ageselex[out.ss3$ageselex$Fleet==1 & out.ss3$ageselex$Factor=="Asel2" & out.ss3$ageselex$Yr %in% c(out.ss3$startyr:(out.ss3$endyr)),c("Yr","0","1","2","3","4","5","6") ])
colnames(selectivity)[1]<-"year"
sel<-melt(selectivity,id.vars='year')
#print(str(sel))
sel.all<-rbind(sel.all,cbind(sel,retro_run=i))
#sel_bar<-mean(as.numeric(selectivity[,4:7]))
sel_bar<-rowMeans(selectivity[,4:7])
startyr <- out.ss3$startyr
endyr <- out.ss3$endyr
aux <- out.ss3$derived_quants
idx <- match(paste("F_",startyr:(endyr-1),sep=""), aux[,1])
aux <- aux[idx, ]
F.dat <- data.frame(Year=startyr:(endyr-1),
Value=aux$Value,
CV=aux$StdDev/aux$Value,
Lower=aux$Value-2*aux$StdDev,
Upper=aux$Value+2*aux$StdDev,
#sel_bar=sel_bar[-length(sel_bar)],
#mean=mean(aux$Value),
param="f apic")
F.all<-rbind(F.all,cbind(F.dat,retro_run=i))
Fbar.dat <- data.frame(Year=startyr:(endyr-1),
Value=aux$Value*sel_bar[-length(sel_bar)],
CV=aux$StdDev/aux$Value*sel_bar[-length(sel_bar)],
Lower=(aux$Value*sel_bar[-length(sel_bar)])-2*aux$StdDev,
Upper=(aux$Value*sel_bar[-length(sel_bar)])+2*aux$StdDev,
#sel_bar=sel_bar[-length(sel_bar)],
#mean=mean(aux$Value),
param="f bar")
Fbar.all<-rbind(Fbar.all,cbind(Fbar.dat,retro_run=i))
aux <- out.ss3$derived_quants
idx <- match(paste("Recr_",startyr:(endyr-1),sep=""), aux[,1])
aux <- aux[idx, ]
rec.dat <- data.frame(Year=startyr:(endyr-1),
Value=aux$Value,
CV=aux$StdDev/aux$Value,
Lower=aux$Value-2*aux$StdDev,
Upper=aux$Value+2*aux$StdDev,
#sel_bar=sel_bar[-length(sel_bar)],
#mean=mean(aux$Value),
param="rec"
)
rec.all<-rbind(rec.all,cbind(rec.dat,retro_run=i))
#In our case we use Biomass1+ and not SSB.
#So we need to get values from the timeseries data.frame
#And use the StDev from the SSB since the model does not calculate the StDev from the Biomass1+
#aux <- out.ss3$derived_quants
#idx <- match(paste("SSB_",startyr:endyr,sep=""), aux[,1])
#aux <- aux[idx, ]
aux <- subset(out.ss3$timeseries, Era=="TIME",c("Yr","Bio_smry"))
idx <- grep("SSB_\\d",out.ss3$derived_quants$Label)
cv <- data.frame(cv=out.ss3$derived_quants[idx,"StdDev"]/out.ss3$derived_quants[idx,"Value"])
cv$Yr <- out.ss3$startyr:out.ss3$endyr
aux <- merge(aux,cv,by="Yr")
bio.dat <- data.frame(Year=startyr:endyr,
#Value=aux$Value,
Value=aux$Bio_smry,
CV=aux$cv,
Lower=aux$Bio_smry-2*aux$cv*aux$Bio_smry,
Upper=aux$Bio_smry+2*aux$cv*aux$Bio_smry,
#sel_bar=sel_bar,
#mean=mean(aux$Bio_smry),
param="bio1plus"
)
bio.all<-rbind(bio.all,cbind(bio.dat,retro_run=i))
rm(aux,bio.dat,cv,F.dat,Fbar.dat,rec.dat,sel,selectivity,endyr,i,idx,mydir,out.ss3,sel_bar,startyr)
}
all_scenarios<-rbind(bio.all,rec.all,F.all,Fbar.all)
rm(aux,bio.dat,cv,F.dat,Fbar.dat,rec.dat,sel,selectivity,endyr,i,idx,mydir,out.ss3,sel_bar,startyr)
warnings()
all_scenarios<-rbind(bio.all,rec.all,F.all,Fbar.all)
diff <- subset(all_scenarios,Year %in% c(2012:2018))
head(diff)
diff %>%
dplyr::arrange(Year)%>%
group_by(param,Year)%>%
mutate_at(c("Value"),funs((. - Value[1])/Value[1])) %>%
na.omit() %>% as.data.frame -> diff_bettest
ggplot(subset(diff_bettest,param %in% c("bio1plus","rec")), aes(x=as.factor(Year), y=Value,fill=factor(test)))+
geom_line(size=1.2,aes(col=factor(test),group=test))+
theme_bw()+
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"),
legend.text=element_text(size=14),
legend.position = "bottom")+
facet_wrap(~param,scales="free",ncol=1)+
scale_colour_discrete(name="Run")+
labs(ylab="Year", xlab="Proportion of Change")
ggplot(subset(diff_bettest,param %in% c("bio1plus","rec")), aes(x=as.factor(Year), y=Value,fill=factor(Year)))+
geom_line(size=1.2,aes(col=factor(test),group=test))+
theme_bw()+
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"),
legend.text=element_text(size=14),
legend.position = "bottom")+
facet_wrap(~param,scales="free",ncol=1)+
scale_colour_discrete(name="Run")+
labs(ylab="Year", xlab="Proportion of Change")
ggplot(subset(diff_bettest,param %in% c("bio1plus","rec")), aes(x=as.factor(Year), y=Value,fill=factor(Year)))+
geom_line(size=1.2,aes(col=factor(Year),group=Year))+
theme_bw()+
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"),
legend.text=element_text(size=14),
legend.position = "bottom")+
facet_wrap(~param,scales="free",ncol=1)+
scale_colour_discrete(name="Run")+
labs(ylab="Year", xlab="Proportion of Change")
diff_bettest
head(diff_bettest)
head(diff)
diff %>%
dplyr::arrange(Year)
diff %>%
dplyr::arrange(Year)%>%
group_by(param,Year)
?mutate_at
diff %>%
dplyr::arrange(Year)%>%
group_by(param,Year)%>%
mutate_at(c("Value"),funs((. - Value[1])/Value[1])) %>%
na.omit() %>% as.data.frame -> diff_bettest
head(diff_bettest)
ddply(diff, .(param), transform, diff=c(NA,diff(Value)))
dplyr::ddply(diff, .(param), transform, diff=c(NA,diff(Value)))
plyr::ddply(diff, .(param), transform, diff=c(NA,diff(Value)))
df %>%
group_by(param) %>%
mutate(Diff = Value - lag(Value))
df %>%
group_by(param) %>%
mutate_at(Diff = Value - lag(Value))
diff %>%
group_by(param) %>%
mutate_at(Diff = Value - lag(Value))
diff <- subset(all_scenarios,Year %in% c(2012:2018))
diff %>%
group_by(param) %>%
mutate(Diff = Value - lag(Value))
diff %>%
group_by(param) %>%
mutate(Diff = Value - Value[1]))
diff %>%
group_by(param) %>%
mutate(Diff = Value - Value[1])
diff %>%
group_by(param) %>%
mutate(Diff = (Value - Value[1])/Value[1])
ggplot(subset(diff_bettest,param %in% c("bio1plus")), aes(x=as.factor(Year), y=Diff)+
geom_line(size=1.2)+
theme_bw()+
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"),
legend.text=element_text(size=14),
legend.position = "bottom")
)
r
ggplot(subset(diff_bettest,param %in% c("bio1plus")), aes(x=as.factor(Year), y=Diff)+
geom_line()+
theme_bw()
ggplot(subset(diff_bettest,param %in% c("bio1plus")), aes(x=as.factor(Year), y=Diff))+
geom_line()+
theme_bw()
diff %>%
group_by(param) %>%
mutate(Diff = (Value - Value[1])/Value[1])
%>% as.data.frame -> diff_bettest
diff %>%
group_by(param) %>%
mutate(Diff = (Value - Value[1])/Value[1]) %>% as.data.frame -> diff_bettest
ggplot(subset(diff_bettest,param %in% c("bio1plus")), aes(x=as.factor(Year), y=Diff))+
geom_line()+
theme_bw()
ggplot(subset(diff_bettest,param %in% c("bio1plus")), aes(x=as.factor(Year), y=Diff))+
geom_point()+
theme_bw()
ggplot(subset(diff_bettest,param %in% c("bio1plus")), aes(x=as.factor(Year), y=Diff))+
geom_line()+
theme_bw()
ggplot(subset(diff_bettest,param %in% c("bio1plus")), aes(x=as.factor(Year), y=Diff))+
geom_line(group=Diff)+
theme_bw()
ggplot(subset(diff_bettest,param %in% c("bio1plus")), aes(x=as.factor(Year), y=Diff))+
geom_line(aes(x=as.factor(Year),y=diff))+
theme_bw()
ggplot(subset(diff_bettest,param %in% c("bio1plus")), aes(x=as.factor(Year), y=Diff))+
geom_line(aes(x=as.factor(Year),y=Diff))+
theme_bw()
ggplot(subset(diff_bettest,param %in% c("bio1plus")) )+
geom_line(aes(x=as.factor(Year), y=Diff))+
theme_bw()
ggplot(subset(diff_bettest,param %in% c("bio1plus")) )+
geom_point()+
geom_line(aes(x=as.factor(Year), y=Diff))+
theme_bw()
ggplot(subset(diff_bettest,param %in% c("bio1plus")) ,aes(x=as.factor(Year), y=Diff))+
geom_point()+
geom_line(aes(x=as.factor(Year), y=Diff))+
theme_bw()
ggplot(subset(diff_bettest,param %in% c("bio1plus")) ,aes(x=as.factor(Year), y=Diff))+
geom_point()+
geom_line(group=Diff)+
theme_bw()
ggplot(subset(diff_bettest,param %in% c("bio1plus")) ,aes(x=as.factor(Year), y=Diff))+
geom_point()+
geom_line(aes(group=Diff))+
theme_bw()
ggplot(subset(diff_bettest,param %in% c("bio1plus")) ,aes(x=Year, y=Diff))+
geom_point()+
geom_line()+
theme_bw()
ggplot(subset(diff_bettest,param %in% c("bio1plus")) ,aes(x=Year, y=Diff))+
geom_point()+
geom_line()+
geom_hline(h=0)+
theme_bw()
ggplot(subset(diff_bettest,param %in% c("bio1plus")) ,aes(x=Year, y=Diff))+
geom_point()+
geom_line()+
geom_hline(y=0)+
theme_bw()
ggplot(subset(diff_bettest,param %in% c("bio1plus")) ,aes(x=Year, y=Diff))+
geom_point()+
geom_line()+
geom_hline(yintercept = 0)+
theme_bw()
ggplot(subset(diff_bettest,param %in% c("bio1plus")) ,aes(x=Year, y=Diff))+
geom_point()+
geom_line()+
geom_hline(yintercept = 0,linetype="dashed",colour="grey60")+
theme_bw()
ggplot(subset(diff_bettest,param %in% c("bio1plus")) ,aes(x=Year, y=Diff))+
geom_point()+
geom_line()+
geom_hline(yintercept = 0,linetype="dashed",colour="grey60")+
theme_bw()+
labs(ylab="Year", xlab="Proportion of Change")
ggplot(subset(diff_bettest,param %in% c("bio1plus")) ,aes(x=Year, y=Diff))+
geom_point()+
geom_line()+
geom_hline(yintercept = 0,linetype="dashed",colour="grey60")+
theme_bw()+
labs(xlab="Year", ylab="Proportion of Change")
ggplot(subset(diff_bettest,param %in% c("bio1plus")) ,aes(x=Year, y=Diff))+
geom_point()+
geom_line()+
geom_hline(yintercept = 0,linetype="dashed",colour="grey60")+
theme_bw()+
xlab="Year"+ ylab="Proportion of Change"
ggplot(subset(diff_bettest,param %in% c("bio1plus")) ,aes(x=Year, y=Diff))+
geom_point()+
geom_line()+
geom_hline(yintercept = 0,linetype="dashed",colour="grey60")+
theme_bw()+
scale_x_continuous("Year")+
scale_y_continuous("Proportion of change")
ggplot(subset(diff_bettest,param %in% c("bio1plus")) ,aes(x=Year, y=Diff))+
geom_point()+
geom_line()+
geom_hline(yintercept = 0,linetype="dashed",colour="grey60")+
theme_bw()+
scale_x_continuous("Ano")+
scale_y_continuous("Diferença em relação a 2012")
ggplot(subset(diff_bettest,param %in% c("bio1plus")) ,aes(x=Year, y=Diff))+
geom_point()+
geom_line()+
geom_hline(yintercept = 0,linetype="dashed",colour="grey60")+
theme_bw()+
scale_x_continuous("Ano")+
scale_y_continuous("Diferença")
diff %>%
group_by(param) %>%
mutate(Diff = (Value - Value[Year==2012])/Value[Year==2012]) %>% as.data.frame -> diff_bettest
ggplot(subset(diff_bettest,param %in% c("bio1plus")) ,aes(x=Year, y=Diff))+
geom_point()+
geom_line()+
geom_hline(yintercept = 0,linetype="dashed",colour="grey60")+
theme_bw()+
scale_x_continuous("Ano")+
scale_y_continuous("Diferença")
diff <- subset(all_scenarios,Year %in% c(1996:2018))
diff %>%
group_by(param) %>%
mutate(Diff = (Value - Value[Year==2012])/Value[Year==2012]) %>% as.data.frame -> diff_bettest
ggplot(subset(diff_bettest,param %in% c("bio1plus")) ,aes(x=Year, y=Diff))+
geom_point()+
geom_line()+
geom_hline(yintercept = 0,linetype="dashed",colour="grey60")+
theme_bw()+
scale_x_continuous("Ano")+
scale_y_continuous("Diferença")
diff <- subset(all_scenarios,Year %in% c(2006:2018))
diff %>%
group_by(param) %>%
mutate(Diff = (Value - Value[Year==2012])/Value[Year==2012]) %>% as.data.frame -> diff_bettest
ggplot(subset(diff_bettest,param %in% c("bio1plus")) ,aes(x=Year, y=Diff))+
geom_point()+
geom_line()+
geom_hline(yintercept = 0,linetype="dashed",colour="grey60")+
theme_bw()+
scale_x_continuous("Ano")+
scale_y_continuous("Diferença")
diff <- subset(all_scenarios,Year %in% c(2006:2018))
diff %>%
group_by(param) %>%
mutate(Diff = (Value - Value[Year==2012])/Value[Year==2012]) %>% as.data.frame -> diff_bettest
ggplot(subset(diff_bettest,param %in% c("bio1plus")) ,aes(x=Year, y=Diff))+
geom_point()+
geom_line()+
geom_hline(yintercept = 0,linetype="dashed",colour="grey60")+
theme_bw()+
scale_x_continuous("Ano")+
scale_y_continuous("Diferença (%)")
ggplot(subset(diff_bettest,param %in% c("bio1plus")) ,aes(x=Year, y=Diff))+
geom_point()+
geom_line()+
geom_hline(yintercept = 0,linetype="dashed",colour="grey60")+
theme_minimal()+
scale_x_continuous("Ano")+
scale_y_continuous("Diferença (%)")
diff <- subset(all_scenarios,Year %in% c(2000:2018))
diff %>%
group_by(param) %>%
mutate(Diff = (Value - Value[Year==2012])/Value[Year==2012]) %>% as.data.frame -> diff_bettest
ggplot(subset(diff_bettest,param %in% c("bio1plus")) ,aes(x=Year, y=Diff))+
geom_point()+
geom_line()+
geom_hline(yintercept = 0,linetype="dashed",colour="grey60")+
theme_minimal()+
scale_x_continuous("Ano")+
scale_y_continuous("Diferença (%)")
2021570-1863214
2021570-1863314
9606836-2374582
80984-79854
171978-124106
